name: go-fvm-sdk
on:
  pull_request:
    branches:
      - '**'
env:
  RUSTFLAGS: -Dwarnings

jobs:

  check:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2

      - name: dependencies
        run: sudo apt-get -o Acquire::Retries=3 update && sudo apt-get -o Acquire::Retries=3 install make git mesa-opencl-icd ocl-icd-opencl-dev wget -y && sudo apt upgrade -y

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: setup rust
        uses: actions-rs/toolchain@v1
        with:
          target: wasm32-unknown-unknown
          override: true
          components: rustfmt, clippy

      - name: setup build cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}

      - name: install tinygo
        run: |
          wget https://github.com/tinygo-org/tinygo/releases/download/v0.25.0/tinygo_0.25.0_amd64.deb
          sudo dpkg -i tinygo_0.25.0_amd64.deb
          rm tinygo_0.25.0_amd64.deb

      - name: Build
        run: |
          make build
          make build-example
          make install

      - name: patch
        run: |
          sudo fvm_go_sdk patch

      - name: Lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.46.2
          golangci-lint run ./... --timeout 10m

      - name: gen-check
        run: |
          export PATH=$PATH:/usr/local/tinygo/bin
          make code-gen
          git status --porcelain
          test -z "$(git status --porcelain)"

      - name: Test
        run: |
          export PATH=$PATH:/usr/local/tinygo/bin
          make test
